{"version":3,"file":"component---src-pages-index-tsx-2342fef3effa18a4d864.js","mappings":"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","sources":["webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/GlobeAltIcon.js","webpack://AutoGen_Studio/./src/components/views/playground/workflows.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sessions.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sidebar.tsx","webpack://AutoGen_Studio/./src/components/views/playground/ra.tsx","webpack://AutoGen_Studio/./src/pages/index.tsx","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/Square3Stack3DIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/TrashIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 4.5l7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction GlobeAltIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418\"\n  }));\n}\nconst ForwardRef = React.forwardRef(GlobeAltIcon);\nexport default ForwardRef;","import { Select, message } from \"antd\";\nimport * as React from \"react\";\nimport { LoadingOverlay } from \"../../atoms\";\nimport { IFlowConfig, IStatus } from \"../../types\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport { fetchJSON, getServerUrl } from \"../../utils\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { Link } from \"gatsby\";\nimport { Square2StackIcon } from \"@heroicons/react/24/outline\";\n\nconst AgentsWorkflowView = () => {\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const [loading, setLoading] = React.useState(false);\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n  const setWorkflowConfig = useConfigStore((state) => state.setWorkflowConfig);\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listWorkflowsUrl = `${serverUrl}/workflows?user_id=${user?.email}`;\n\n  const [workflowConfigs, setWorkflowConfigs] = React.useState<IFlowConfig[]>(\n    []\n  );\n\n  const [selectedConfig, setSelectedConfig] = React.useState<number>(0);\n\n  const fetchWorkFlow = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n\n        setWorkflowConfigs(data.data);\n        if (data.data.length > 0) {\n          setWorkflowConfig(data.data[0]);\n        }\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listWorkflowsUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      // console.log(\"fetching messages\", messages);\n      fetchWorkFlow();\n    }\n  }, []);\n\n  return (\n    <div className=\" mb-4 relative\">\n      {/* <div className=\"font-semibold pb-2 border-b\">\n        <Square2StackIcon className=\"h-5 w-5 inline-block mr-1\" />\n        Agents Workflow{\" \"}\n      </div> */}\n      <div className=\"text-sm mt-2 mb-2 pb-1  \">\n        {\" \"}\n        Please select an agent workflow to begin.{\" \"}\n      </div>\n\n      <div className=\"relative mt-2 \">\n        <LoadingOverlay loading={loading} />\n\n        {workflowConfigs && workflowConfigs.length > 0 && (\n          <Select\n            className=\"w-full\"\n            value={workflowConfigs[selectedConfig].name}\n            onChange={(value: any) => {\n              setSelectedConfig(value);\n              setWorkflowConfig(workflowConfigs[value]);\n            }}\n            options={\n              workflowConfigs.map((config, index) => {\n                return { label: config.name, value: index };\n              }) as any\n            }\n          />\n        )}\n        <div className=\"mt-2 text-xs\">\n          {\" \"}\n          View all workflows{\" \"}\n          <span className=\"text-accent\">\n            {\" \"}\n            <Link to=\"/build\">here</Link>\n          </span>{\" \"}\n        </div>\n      </div>\n      {!workflowConfigs ||\n        (workflowConfigs && workflowConfigs.length === 0 && (\n          <div className=\"p-1 border rounded text-xs px-2 text-secondary\">\n            {\" \"}\n            No agent workflows found.\n          </div>\n        ))}\n    </div>\n  );\n};\nexport default AgentsWorkflowView;\n","import {\n  GlobeAltIcon,\n  PlusIcon,\n  Square3Stack3DIcon,\n  TrashIcon,\n} from \"@heroicons/react/24/outline\";\nimport { Button, Modal, message } from \"antd\";\nimport * as React from \"react\";\nimport { IChatSession, IStatus } from \"../../types\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { fetchJSON, getServerUrl, timeAgo, truncateText } from \"../../utils\";\nimport { LaunchButton, LoadingOverlay } from \"../../atoms\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport AgentsWorkflowView from \"./workflows\";\n\nconst SessionsView = ({}: any) => {\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listSessionUrl = `${serverUrl}/sessions?user_id=${user?.email}`;\n  const createSessionUrl = `${serverUrl}/sessions`;\n  const publishSessionUrl = `${serverUrl}/sessions/publish`;\n  const deleteSessionUrl = `${serverUrl}/sessions/delete`;\n\n  const sessions = useConfigStore((state) => state.sessions);\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n  const setSessions = useConfigStore((state) => state.setSessions);\n  // const [session, setSession] =\n  //   React.useState<IChatSession | null>(null);\n  const session = useConfigStore((state) => state.session);\n  const setSession = useConfigStore((state) => state.setSession);\n  const setWorkflowConfig = useConfigStore((state) => state.setWorkflowConfig);\n  const deleteSession = (session: IChatSession) => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: user?.email,\n        session: session,\n      }),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        setSessions(data.data);\n        if (data.data && data.data.length > 0) {\n          setSession(data.data[0]);\n        }\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(deleteSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const [newSessionModalVisible, setNewSessionModalVisible] =\n    React.useState(false);\n\n  const fetchSessions = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n        // console.log(\"sessions\", data);\n        setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const publishSession = () => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: session,\n      tags: [\"published\"],\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        // setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(publishSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (sessions && sessions.length > 0) {\n      const firstSession = sessions[0];\n      setSession(firstSession);\n      setWorkflowConfig(firstSession?.flow_config);\n    } else {\n      setSession(null);\n    }\n  }, [sessions]);\n\n  const createSession = () => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: {\n        user_id: user?.email,\n        flow_config: workflowConfig,\n        session_id: null,\n      },\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    console.log(\"createSession\", payLoad);\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        setSessions(data.data);\n        setWorkflowConfig(data.data[0]?.workflow_config);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(createSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      // console.log(\"fetching messages\", messages);\n      fetchSessions();\n    }\n  }, []);\n\n  const sessionRows = sessions.map((data: IChatSession, index: number) => {\n    const isSelected = session?.id === data.id;\n    const rowClass = isSelected\n      ? \"bg-accent text-white\"\n      : \"bg-secondary text-primary\";\n    return (\n      <div\n        key={\"sessionsrow\" + index}\n        className=\"  mb-2 pb-1  border-b border-dashed \"\n      >\n        <div\n          className={`rounded p-2 cursor-pointer ${rowClass}`}\n          role=\"button\"\n          onClick={() => {\n            setSession(data);\n            setWorkflowConfig(data.flow_config);\n          }}\n        >\n          <div className=\"text-xs\">{truncateText(data.id, 27)}</div>\n          <div className=\"text-xs\">{data.flow_config.name}</div>\n          <div className=\"text-xs text-right \">{timeAgo(data.timestamp)} </div>\n        </div>\n        <div className=\"flex mt-2 text-secondary\">\n          <div className=\"flex-1\"></div>\n          <div\n            role=\"button\"\n            onClick={() => {\n              deleteSession(data);\n            }}\n            className=\"text-xs px-2  hover:text-accent cursor-pointer\"\n          >\n            <TrashIcon className=\"w-4 h-4 inline-block mr-1 \" />\n            delete{\" \"}\n          </div>\n\n          <div\n            role=\"button\"\n            onClick={() => {\n              publishSession();\n            }}\n            className=\"text-xs px-2  hover:text-accent cursor-pointer\"\n          >\n            <GlobeAltIcon className=\"w-4 h-4 inline-block mr-1 \" />\n            publish{\" \"}\n          </div>\n        </div>\n        {/* <div className=\"border-b border-dashed mx-2 mt-1\"></div> */}\n      </div>\n    );\n  });\n\n  let windowHeight, skillsMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    skillsMaxHeight = windowHeight - 400 + \"px\";\n  }\n\n  return (\n    <div className=\"  \">\n      <Modal\n        title={\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <Square3Stack3DIcon className=\"h-5 w-5 inline-block mr-1\" />\n            New Sessions{\" \"}\n          </div>\n        }\n        open={newSessionModalVisible}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setNewSessionModalVisible(false);\n            }}\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!workflowConfig}\n            onClick={() => {\n              setNewSessionModalVisible(false);\n              createSession();\n            }}\n          >\n            Create\n          </Button>,\n        ]}\n      >\n        <AgentsWorkflowView />\n      </Modal>\n      <div className=\"mb-2 relative\">\n        <div className=\"\">\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <Square3Stack3DIcon className=\"h-5 w-5 inline-block mr-1\" />\n            Sessions{\" \"}\n          </div>\n          {sessions && sessions.length > 0 && (\n            <div className=\"text-xs mb-2 pb-1  \">\n              {\" \"}\n              Create a new session or select an existing session to view chat.\n            </div>\n          )}\n          <div\n            style={{\n              maxHeight: \"300px\",\n            }}\n            className=\"mb-4 overflow-y-scroll scroll rounded relative \"\n          >\n            <LoadingOverlay loading={loading} />\n            {sessionRows}\n          </div>\n          {(!sessions || sessions.length == 0) && !loading && (\n            <div className=\"text-xs text-gray-500\">\n              No sessions found. Create a new session to get started.\n            </div>\n          )}\n        </div>\n        <div className=\"flex gap-x-2\">\n          <div className=\"flex-1\"></div>\n          <LaunchButton\n            className=\"text-sm p-2 px-3\"\n            onClick={() => {\n              if (sessions && sessions.length > 0) {\n                setWorkflowConfig(sessions[0]?.flow_config);\n              } else {\n                setWorkflowConfig(null);\n              }\n              setNewSessionModalVisible(true);\n            }}\n          >\n            {\" \"}\n            <PlusIcon className=\"w-5 h-5 inline-block mr-1\" />\n            New\n          </LaunchButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionsView;\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport * as React from \"react\";\nimport AgentsView from \"./workflows\";\nimport SessionsView from \"./sessions\";\nimport { useConfigStore } from \"../../../hooks/store\";\n\nconst SideBarView = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const minWidth = isOpen ? \"270px\" : \"50px\";\n\n  let windowHeight, sidebarMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    sidebarMaxHeight = windowHeight - 180 + \"px\";\n  }\n\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n\n  return (\n    <div\n      style={{\n        minWidth: minWidth,\n        maxWidth: minWidth,\n        height: \"calc(100vh - 190px)\",\n      }}\n      className=\"    \"\n    >\n      <div className=\" transition overflow-hidden duration-300  flex flex-col   h-full p-2 overflow-y-scroll scroll rounded \">\n        <div className={`${isOpen ? \"\" : \"hidden\"}  `}>\n          {/* <AgentsView /> */}\n          {<SessionsView />}\n        </div>\n      </div>\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        role=\"button\"\n        className=\" hover:text-accent duration-150  \"\n      >\n        {isOpen ? (\n          <div className=\"mt-4  \">\n            {\" \"}\n            <ChevronLeftIcon className=\"w-6 h-6  inline-block    rounded\" />{\" \"}\n            <span className=\"text-xs \"> close sidebar</span>\n          </div>\n        ) : (\n          <ChevronRightIcon className=\"w-6 h-6   inline-block   font-bold rounded \" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBarView;\n","import * as React from \"react\";\nimport { IChatSession, IMessage, IStatus } from \"../../types\";\nimport { fetchJSON, getServerUrl, setLocalStorage } from \"../../utils\";\nimport ChatBox from \"./chatbox\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { message } from \"antd\";\nimport SideBarView from \"./sidebar\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport SessionsView from \"./sessions\";\nimport AgentsWorkflowView from \"./workflows\";\nimport { Square3Stack3DIcon } from \"@heroicons/react/24/outline\";\nimport Icon from \"../../icons\";\n\nconst RAView = () => {\n  const session: IChatSession | null = useConfigStore((state) => state.session);\n  const [loading, setLoading] = React.useState(false);\n  const [messages, setMessages] = React.useState<IMessage[] | null>(null);\n  const [skillUpdated, setSkillUpdated] = React.useState(\"default\");\n\n  const skillup = {\n    get: skillUpdated,\n    set: setSkillUpdated,\n  };\n\n  const [config, setConfig] = React.useState(null);\n\n  React.useEffect(() => {\n    setLocalStorage(\"ara_config\", config);\n  }, [config]);\n\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const fetchMessagesUrl = `${serverUrl}/messages?user_id=${user?.email}&session_id=${session?.id}`;\n  const workflowConfig = useConfigStore((state) => state.workflowConfig);\n\n  const fetchMessages = () => {\n    setError(null);\n    setLoading(true);\n    setMessages(null);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    // console.log(\"payload\", payLoad);\n    const onSuccess = (data: any) => {\n      // console.log(data);\n      if (data && data.status) {\n        setMessages(data.data);\n        // message.success(data.message);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(fetchMessagesUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user && session) {\n      // console.log(\"fetching messages\", messages);\n      fetchMessages();\n    }\n  }, [session]);\n\n  return (\n    <div className=\"h-full   \">\n      <div className=\"flex h-full   \">\n        <div className=\"  mr-2  rounded\">\n          <SideBarView />\n        </div>\n        <div className=\" flex-1  \">\n          {!session && (\n            <div className=\" w-full  h-full flex items-center justify-center\">\n              {/* {JSON.stringify(workflowConfig)} */}\n              <div className=\"w-2/3\" id=\"middle\">\n                <div className=\"w-full   text-center\">\n                  {\" \"}\n                  <img\n                    src=\"/images/svgs/welcome.svg\"\n                    alt=\"welcome\"\n                    className=\"text-accent inline-block object-cover w-56\"\n                  />\n                </div>\n                <SessionsView />\n              </div>\n            </div>\n          )}\n\n          {workflowConfig !== null && session !== null && (\n            <ChatBox initMessages={messages} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RAView;\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport RAView from \"../components/views/playground/ra\";\n\n// markup\nconst IndexPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Home\" link={\"/\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <RAView />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import * as React from \"react\";\nfunction Square3Stack3DIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3\"\n  }));\n}\nconst ForwardRef = React.forwardRef(Square3Stack3DIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  }));\n}\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","AgentsWorkflowView","error","setError","React","status","message","loading","setLoading","setWorkflowConfig","useConfigStore","state","workflowConfig","user","appContext","listWorkflowsUrl","getServerUrl","email","workflowConfigs","setWorkflowConfigs","selectedConfig","setSelectedConfig","fetchJSON","method","headers","data","length","err","className","LoadingOverlay","Select","value","name","onChange","options","map","config","index","label","Link","to","_ref","serverUrl","listSessionUrl","createSessionUrl","publishSessionUrl","deleteSessionUrl","sessions","setSessions","session","setSession","newSessionModalVisible","setNewSessionModalVisible","firstSession","flow_config","sessionRows","rowClass","key","role","onClick","truncateText","timeAgo","timestamp","payLoad","body","JSON","stringify","user_id","success","deleteSession","TrashIcon","publishSession","tags","GlobeAltIcon","windowHeight","skillsMaxHeight","window","innerHeight","Modal","Square3Stack3DIcon","open","footer","Button","type","disabled","createSession","session_id","console","log","_data$data$","workflow_config","style","maxHeight","LaunchButton","_sessions$","PlusIcon","SideBarView","isOpen","setIsOpen","minWidth","sidebarMaxHeight","maxWidth","height","SessionsView","ChevronLeftIcon","ChevronRightIcon","RAView","messages","setMessages","skillUpdated","setSkillUpdated","setConfig","setLocalStorage","fetchMessagesUrl","src","alt","ChatBox","initMessages","Layout","meta","site","siteMetadata","link","ForwardRef"],"sourceRoot":""}